Authentication and Authorization for Google APIs
http://code.google.com/apis/accounts/docs/AuthForInstalledApps.html

ClientLogin for Installed Applications
 "accounts that use 2-step verification, SAML, or Open ID are not compatible with ClientLogin"
 

http://code.google.com/apis/accounts/
What are authentication and authorization?

Authentication: Allow users to sign-in

OpenID for Google Account Users, based on the OpenID 2.0 protocol, allows users to log into your website or web application with their Google account. When Google authenticates a user's account, it returns a user ID to your application, which allows you to collect and store user information. OpenID also allows you to get access to certain user account information, with user approval.

Authorization: Access users' data

The OAuth 2.0 open-standard protocol allows users to authorize access to their data, after they have been authenticated. Google supports the OAuth 2.0 protocol with bearer tokens for web and installed applications, as well as OAuth 1.0 for web applications and for installed applications.



The hybrid protocol uses both OpenID and OAuth, to provide both authentication and authorization in a single-step process.
http://step2.googlecode.com/svn/spec/openid_oauth_extension/latest/openid_oauth_extension.html



OAuth uses three kinds of credentials: client credentials, temporary credentials, and token credentials. The original version of the specification used a different set of terms for these credentials: 

consumer key and secret (client credentials), 

request token and secret (temporary credentials), 

and access token and secret (token credentials). 

The specification still uses a parameter name ‘oauth_consumer_key‘ for backwards compatibility.

In OAuth 1.0, the secret half of each set of credentials is defined as a symmetric shared secret. This means that both the client and server must have access to the same secret string. However, OAuth supports an RSA-based authentication method which uses an asymmetric client secret. The different credentials are explained in more detailed later on.

