# Google Reader API

http://code.google.com/p/pyrfeed/wiki/GoogleReaderAPI
http://code.google.com/p/google-reader-api/
http://code.google.com/p/google-reader-api/w/list
http://code.google.com/p/google-reader-api/wiki/Authentication

http://www.niallkennedy.com/blog/2005/12/google-reader-api.html
http://mindsharestrategy.com/2010/google-reader-api-a-brief-tutorial/
http://code.google.com/p/pyrfeed/wiki/GoogleReaderAPI

http://blog.martindoms.com/2009/08/15/using-the-google-reader-api-part-1/
http://blog.martindoms.com/2009/10/16/using-the-google-reader-api-part-2/
http://blog.martindoms.com/2010/01/20/using-the-google-reader-api-part-3/

http://christianheilmann.com/category/google/
https://groups.google.com/forum/#!forum/fougrapi


## friends

YAY found the friend API here
http://mobile.tutsplus.com/tutorials/mobile-web-apps/building-a-mobile-web-application-with-the-google-reader-api/

https://groups.google.com/forum/#!topic/fougrapi/ukPcqr6Ja9M

	FOLLOWER(0), // this person is following the user
	FOLLOWING(1), // the user is following this person
	CONTACT(3), // this person is in the user's contacts list
	PENDING_FOLLOWING(4), // the user is attempting to follow this person
	PENDING_FOLLOWER(5), // this person is attempting to follow this user
	ALLOWED_FOLLOWING(6), // the user is allowed to follow this person
	ALLOWED_COMMENTING(7); // the user is allowed to comment on this
	person's shared items

	The "attempting"/"allowed" states are for when not sharing publicly
	(only with certain contact groups).

	The flags value is a bitfield, the bit meanings are as follow:

	IS_ME(0), // represents the current user
	IS_HIDDEN(1), // current user has hidden this person from the list of
	people with shared items that show up
	IS_NEW(2), // this person is a recent addition to the user's list of
	people that they follow
	USES_READER(3), // this person uses reader
	IS_BLOCKED(4), // the user has blocked this person
	HAS_PROFILE(5), // this person has created a Google Profile
	IS_IGNORED(6), // this person has requested to follow the user, but
	the use has ignored the request
	IS_NEW_FOLLOWER(7), // this person has just begun to follow the user
	IS_ANONYMOUS(8), // this person doesn't have a display name set
	HAS_SHARED_ITEMS(9); // this person has shared items in reader

	I believe the USES_READER and HAS_SHARED_ITEMS bits are not always
	computed (since they involve per-person lookups). Let me know if you
	need to use them, and I can look into how loading of them is
	triggered.

Mihai

https://groups.google.com/forum/#!topic/fougrapi/hHDH8W5YVSw



# ruby greader library
  https://github.com/aurelian/grapi
  https://github.com/aurelian/grapi/blob/master/lib/grapi/reader.rb
   -- uses username/password
   -- very incomplete -- seems like a one-day hack
  
  
# OAuth

http://code.google.com/apis/accounts/docs/OAuth.html
http://code.google.com/p/google-reader-api/w/list

  https://groups.google.com/forum/#!topic/fougrapi/RDDJpt6k1w8  
  https://accounts.google.com/UpdateDomain
  
    OAuth (preferred)
    OAuth is the preferred authentication mechanism for both web and installed apps. Using the scope https://www.google.com/reader/api/ obtain a request token, authorize it, exchange it for an access token, and make requests as usual, passing in the OAuth token in the Authorization: HTTP header. You may find the OAuth Playground useful in experimenting with all this.

    The https://www.google.com/reader/atom/ and https://www.google.com/reader/subscription/export scopes are supported as well for applications wish to use the Atom and OPML outputs. Additionally, HTTP versions of these HTTPS schemes are also available.

  http://code.google.com/apis/youtube/2.0/developers_guide_protocol_oauth.html
  
  registering domain with Google https://accounts.google.com/UpdateDomains

  Target URL path prefix: This value enables Google to reject all authorization requests ostensibly from your domain that use an incorrect domain or prefix. If you're making an AuthSub request, this URL must be identical to the prefix value of the next parameter used in your authorization requests. For example, if your next values will be something like http://example.com/authsub and/or http://example.com/feed/authsub, your prefix should be http://example.com. If you're using the OAuth interface, this URL must match the value of the oauth_consumer_key parameter.


http://code.google.com/apis/accounts/docs/RegistrationForWebAppsAuto.html:
  Note: If you're using OAuth with the HMAC-SHA1 signature method, you do not need to upload a certificate; instead, an OAuth "consumer secret" value is automatically generated when you register your domain.

  If your application uses the HMAC-SHA1 signature algorithm, leave the certificate field blank when completing your registration. Google will generate an OAuth consumer secret value, which will display on your domain's registration page after you have completed the registration process. You will then use this value to sign requests.

## oauth in ruby

http://stakeventures.com/articles/2008/02/23/developing-oauth-clients-in-ruby

  

## sharing

"sharing (broadcast tag)"
apparently there are two tags "broadcast" and "broadcast-friends"

As far as unsharing goes, you can use an edit-tag request to remove
the broadcast tag as you would for any other item. We don't currently
support editing of the note once it's created.

There is also the concept of "notes" in Reader, which are standalone
items that originate purely within Reader (you can see the UI for them
at the top of Your Shared Items, Your Stuff, and People You Follow).
These have an origin stream of user/-/state/com.google/post. They can
also be deleted (in the UI they have a delete action) but I don't
remember off-hand the URL for that.

## send to

http://lifehacker.com/5339214/supercharge-google-reader-with-send-to-links

Send To links will not be going away
https://groups.google.com/forum/#!topic/fougrapi/KFwShKzmvW4

How do I use Send To to share items on Google+?
http://www.google.com/support/forum/p/reader/thread?tid=3696ba39aaccb42f&hl=en

/reader/api/0/stream/items/ids?s=user/-/label/foo&n=10&includeAllDirectStreamIds=true

http://code.google.com/p/google-reader-api/wiki/ItemId :
Long form: The prefix tag:google.com,2005:reader/item/ followed by the ID as an unsigned base 16 number that is 0-padded so that it's always 16 characters wide.
Short form: The ID as a signed base 10 number.




## misc

http://code.google.com/p/google-reader-api/wiki/ActionToken
To protect against XSRF attacks, all state-changing methods require an action token in addition to an authentication token. The token can be fetched by making a GET request for /reader/api/0/token and should be passed in to state-changing requests (generally POST requests) with the T parameter (see ApiCommonInputs).

RSS 2.0 spec
  http://cyber.law.harvard.edu/rss/rss.html#ltsourcegtSubelementOfLtitemgt
  
  http://activitystrea.ms/registry/verbs/



http://codeclimber.googlecode.com/svn-history/r101/GoogleReaderConnector/trunk/ReferenceUrls.txt
	Get profile of user
	http://www.google.com/reader/api/0/people/profile?u=14290265284323789574&output=json

	Append the PhotoUrl to http://s2.googleusercontent.com to get the user's icon

	Get Friend List
	http://www.google.com/reader/api/0/friend/list?output=json

	Get Recommended feeds:
	http://www.google.com/reader/api/0/recommendation/list?n=6

	Get ids of items (instead of all the list of items)
	http://www.google.com/reader/api/0/stream/items/ids?s=user/-/state/com.google/reading-list&n=10000&xt=user/-/state/com.google/read
	Also gets feed id
	includeAllDirectStreamIds=true

	Get Content of item
	http://www.google.com/reader/api/0/stream/items/contents (with i=ids passed as data in POST + token T) 

	Mark all feed as read
	http://www.google.com/reader/api/0/mark-all-as-read s=feed/[feedUrl] (POST)

	Sort by "magic"
	r=a solo su /items/ids
	
	Add a note:
	http://stackoverflow.com/questions/1041389/adding-notes-using-google-readers-api
	http://tecjunkie.blogspot.com/2011/05/google-reader-add-note-without-sharing.html
	http://stackoverflow.com/questions/4996049/google-reader-api-how-do-you-share-by-article-url-as-oppose-to-item-id
	
Most recent item read in Reader:
/reader/api/0/stream/items/ids?s=user/-/state/com.google/read&n=1
(includes usec timestamp)
	
# sort subscriptions
	https://groups.google.com/forum/#!searchin/fougrapi/subscriptions$20order/fougrapi/rr9ZWA_R47Y/fRa-gM8vp-AJ
	> order? I know that I can read this
	> from http://www.google.com/reader/api/0/preference/stream/list but I am
	> unaware of any URL that would allow me to edit.
	You can POST to
	http://www.google.com/reader/api/0/preference/stream/set with
	parameters "s" (the stream to set the preference for), "k" (the
	preference key, "subscription-ordering" in this case) and "v" (the
	value, the concatenated IDs in this case).

    "user/15504357426492542506/state/com.google/root": [
      {
        "id": "subscription-ordering",
        "value": "C7C6E64939BEF99A542D30C7575596837D00FA42E06E01A715D9F90BFF60B2F6AB9F2BDE277EC83CB79628FD2E485275BA8DC9C1144FEB5B3EBD1EDDC6865494C9FB8B2BE665215068651DD4B19B41B013F5762CBF2DF03415248F9DA8DD9981620E1017721F3D9967688BC02C551F77E7FCBD9BB250D36A12215E52DBEF89EC2B9EB1E603D0102E9ABEFDCDF8DC4243B3ABFBF2021D549208FC4588C887A69DB4767C018C7CE46C52626812CE983606E92048045C669E5D9C9880EAB67E10ECEB43F7A29CAB0614BF2AC83810110D89A0F439EEE3DE3DE185AF15670B7A7A7A01F6ACBA8BB13C781950D86B0B81A87B4BBB42C3E1F2E0A18AC1D856F4A6C9125450F3FF66852DF42A498EA12E22A23C9593B677C517FBAF55606C6C0CDB140408E8A93498496974512E0A6B3F8651E3AF7DE4270904F96A45DAB79BDC3FD28F6AF095EFCF6DA4C4A7723957D8C9F900606BC4264FE147E8DD8FAB11A9C4EF89EBBF09CA6017CFAE7849B3338A079AA4FFCD6E692F7D4ED11781DB821BD6A4FDCCF6A976DE8AD54F9902863CDB38BD86F54FB7520FA025BA12538E4EC42C9040CE470F1B92CAA21890288A6CCEA941177CE4DAD50A88D330C4F33615D8BF5A22E78B99C9378E101F4BA1DEC1FC41625EAAED39DF6BC750D1E7AB262BA8613F9287114A8799F56FD220CA462333BD01C2BEC2BCFC3D54A473F7CE838304DB915B4F39E80D9317E376"
      }
    ],


    /reader/api/0/subscription/list:
    {
      "id": "feed/http://alexch.tumblr.com/rss",
      "title": "alexch",
      "categories": [

      ],
      "sortid": "C7C6E649",
      "firstitemmsec": "1206144401891",
      "htmlUrl": "http://alexch.tumblr.com/"
    },
    
    
    


# find feeds

https://groups.google.com/forum/#!topic/fougrapi/emOAlCuGSCk

http://www.google.com/reader/api/0/feed-finder?q=cnn&output=json

"You should be able to use num= and start= to page through those results."


localhost:9292/send_to?sharebro_id=title=Ruby%201.9.2%2C%20Rails%203%2C%20Riak%20and%20Ripple&url=http%3A%2F%2Fjit.nuance9.com%2F2010%2F07%2Fruby-192-rails-3-riak-and-ripple.html&source=Just%20In%20Time



